{
  "$id": "https://github.com/IMAGINARY/citizen-quest/specs/storyline.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "decision": {
      "$ref": "#/definitions/text"
    },
    "prompt": {
      "$ref": "#/definitions/text"
    },
    "npcs": {
      "$ref": "#/definitions/npcs"
    },
    "scenery": {
      "$ref": "#/definitions/scenery"
    },
    "initFlags": {
      "$ref": "#/definitions/initFlags"
    },
    "quests": {
      "$ref": "#/definitions/quests"
    },
    "dialogues": {
      "$ref": "#/definitions/indexedDialogues"
    },
    "ending": {
      "$ref": "#/definitions/ending"
    }
  },
  "additionalProperties": false,
  "required": ["decision", "prompt", "npcs", "quests", "ending"],
  "definitions": {
    "initFlags": {
      "oneOf": [
        {
          "$ref": "#/definitions/flagId"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flagId"
          }
        }
      ],
      "errorMessage": "must be a flag or an array of flags."
    },
    "npcs": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/npc"
      }
    },
    "npc": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/text"
        },
        "type": {
          "type": "string"
        },
        "spawn": {
          "$ref": "#/definitions/point"
        },
        "dialogue": {
          "$ref": "#/definitions/dialogue"
        },
        "actAs": {
          "$ref": "#/definitions/roles"
        }
      },
      "additionalProperties": false,
      "anyOf": [
        {
          "required": ["name", "spawn", "dialogue"]
        },
        {
          "required": ["name", "spawn", "actAs"]
        }
      ],
      "errorMessage": {
        "anyOf": "must have name, spawn, and at least one of dialogue or actAs properties."
      }
    },
    "scenery": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/sceneryObject"
      }
    },
    "sceneryObject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "spawn": {
          "$ref": "#/definitions/point"
        }
      },
      "additionalProperties": false,
      "required": ["spawn"]
    },
    "quests": {
      "type": "object",
      "additionalProperties": {
          "$ref": "#/definitions/quest"
      }
    },
    "quest": {
      "type": "object",
      "properties": {
        "npc": {
          "$ref": "#/definitions/objectID"
        },
        "mood": {
          "$ref": "#/definitions/objectID"
        },
        "required": {
          "$ref": "#/definitions/questRequirements"
        },
        "dialogues": {
          "$ref": "#/definitions/indexedDialogues"
        },
        "available": {
          "type": "object",
          "properties": {
            "dialogue": {
              "$ref": "#/definitions/dialogue"
            }
          }
        },
        "stages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/questStage"
          }
        }
      },
      "additionalProperties": false,
      "required": ["npc", "mood", "stages", "available"]
    },
    "questRequirements": {
      "oneOf": [
        {
          "$ref": "#/definitions/objectID"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectID"
          }
        }
      ],
      "errorMessage": "must be a quest ID or an array of quest IDs."
    },
    "questStage": {
      "type": "object",
      "properties": {
        "cond": {
          "$ref": "#/definitions/condition"
        },
        "prompt": {
          "$ref": "#/definitions/text"
        },
        "dialogues": {
          "$ref": "#/definitions/indexedDialogues"
        },
        "counter": {
          "$ref": "#/definitions/questStageCounter"
        },
        "target": {
          "$ref": "#/definitions/objectID"
        }
      },
      "additionalProperties": false,
      "required": ["dialogues"]
    },
    "questStageCounter": {
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/expression"
        },
        "max": {
          "type": "integer",
          "minimum": 0
        },
        "icon": {
          "type": "string",
          "enum": ["happy", "angry", "idea", "person"]
        }
      },
      "additionalProperties": false,
      "required": ["expression", "max"]
    },
    "ending": {
      "type": "object",
      "properties": {
        "dialogue": {
          "$ref": "#/definitions/dialogue"
        }
      },
      "additionalProperties": false,
      "required": ["dialogue"]
    },
    "indexedDialogues": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/dialogue"
      }
    },
    "dialogue": {
      "$ref": "dialogue.schema.json#/definitions/nodeList"
    },
    "flagId": {
      "$ref": "dialogue.schema.json#/definitions/flag_id"
    },
    "roles": {
      "oneOf": [
        {
          "$ref": "#/definitions/roleID"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roleID"
          }
        }
      ],
      "errorMessage": "must be a role ID or an array of role IDs."
    },
    "text": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000
        },
        {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      ],
      "errorMessage": "must be a string or an object with language code keys and string values."
    },

    "condition": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1000
    },
    "expression": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1000
    },
    "roleID": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^_[a-zA-Z_][a-zA-Z0-9_]*$"
    },
    "objectID": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
    },
    "point": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "additionalProperties": false,
      "required": ["x", "y"],
      "errorMessage": "must be an object with x and y properties."
    }
  }
}
